# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]
        exclude:
          - os: macos-latest
            python-version: 3.6
          - os: macos-latest
            python-version: 3.8
          - os: windows-latest
            python-version: 3.6
          - os: windows-latest
            python-version: 3.8
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip (Linux)
      if: startsWith(runner.os, 'Linux')
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache pip (MacOS)
      if: startsWith(runner.os, 'macOS')
      uses: actions/cache@v2
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-


    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pipenv

        pipenv lock --dev --requirements > dev-reqs.txt
        pip install --requirement dev-reqs.txt
        pip install -e .

    - name: Test with pytest
      env:
        TRAVIS_CI: 1
      run: |
        pytest --verbose --capture=no --log-level=info --log-cli-level=info

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8==3.7.9 pipenv safety

    - name: Flake8, Black, & Safety Checks
      run: |
        (pipenv lock --requirements | safety check --stdin) || \
          (sleep 60; pipenv lock --requirements | safety check --stdin) || \
          (sleep 60; pipenv lock --requirements | safety check --stdin)
        make lint
