# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-10.15]
        python-version: [3.7, 3.8, 3.9, '3.10']
        exclude:
          - os: macos-10.15
            python-version: 3.8
          - os: macos-10.15
            python-version: 3.9
          - os: macos-10.15
            python-version: '3.10'
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip (Linux)
      if: startsWith(runner.os, 'Linux')
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache pip (MacOS)
      if: startsWith(runner.os, 'macOS')
      uses: actions/cache@v2
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-


    - name: Install dependencies
      run: |
        echo "**** UPGRADE PIP"
        pip install --upgrade pip==21.2.4 pip-tools wheel
        echo "**** INSTALL PIPENV"
        pip install pipenv==2022.7.24

        echo "**** SETTING PIPFILE"
        export PYTHON_VERSION=`python3 -c 'import sys; print("3_" + str(sys.version_info.minor))'`
        export PIPENV_PIPFILE="Pipfile_$PYTHON_VERSION"
        echo "PIPFILE IS $PIPENV_PIPFILE"
        echo "**** PIPENV LOCK"
        pipenv lock --dev --requirements > dev-reqs.txt
        echo "**** dev-reqs.txt"
        cat dev-reqs.txt
        echo "**** pip install requirements"
        pip install --requirement dev-reqs.txt
        echo "**** install TP locally"
        pip install -v -e .

    - name: Test with pytest
      env:
        TRAVIS_CI: 1
      run: |
        pytest --verbose --capture=no --log-level=info --log-cli-level=info

  pip-install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-10.15]
        python-version: [3.7, 3.8, 3.9, '3.10']
        exclude:
          - os: macos-10.15
            python-version: 3.8
          - os: macos-10.15
            python-version: 3.9
          - os: macos-10.15
            python-version: '3.10'
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: pip install typed_python from github
      run: |
        python --version
        pip --version
        pip freeze
        pip install -v git+https://github.com/APrioriInvestments/typed_python.git@${GITHUB_SHA}

    - name: import typed_python
      run : |
        python -c "import typed_python"

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8==3.8.4 pipenv

    - name: Flake8 and Black Checks
      run: |
        make lint
